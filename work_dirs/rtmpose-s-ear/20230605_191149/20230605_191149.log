2023/06/05 19:11:50 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0: Quadro P4000
    CUDA_HOME: None
    GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
    PyTorch: 1.10.1+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.11.2+cu113
    OpenCV: 4.7.0
    MMEngine: 0.7.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/05 19:11:55 - mmengine - INFO - Config:
default_scope = 'mmpose'
default_hooks = dict(
    timer=dict(type='IterTimerHook', _scope_='mmpose'),
    logger=dict(type='LoggerHook', interval=1, _scope_='mmpose'),
    param_scheduler=dict(type='ParamSchedulerHook', _scope_='mmpose'),
    checkpoint=dict(
        type='CheckpointHook',
        interval=10,
        _scope_='mmpose',
        save_best='PCK',
        rule='greater',
        max_keep_ckpts=2),
    sampler_seed=dict(type='DistSamplerSeedHook', _scope_='mmpose'),
    visualization=dict(
        type='PoseVisualizationHook', enable=False, _scope_='mmpose'))
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='mmdet.PipelineSwitchHook',
        switch_epoch=300,
        switch_pipeline=[
            dict(type='LoadImage', backend_args=dict(backend='local')),
            dict(type='GetBBoxCenterScale'),
            dict(type='RandomFlip', direction='horizontal'),
            dict(type='RandomHalfBody'),
            dict(
                type='RandomBBoxTransform',
                shift_factor=0.0,
                scale_factor=[0.75, 1.25],
                rotate_factor=60),
            dict(type='TopdownAffine', input_size=(256, 256)),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                type='Albumentation',
                transforms=[
                    dict(type='Blur', p=0.1),
                    dict(type='MedianBlur', p=0.1),
                    dict(
                        type='CoarseDropout',
                        max_holes=1,
                        max_height=0.4,
                        max_width=0.4,
                        min_holes=1,
                        min_height=0.2,
                        min_width=0.2,
                        p=0.5)
                ]),
            dict(
                type='GenerateTarget',
                encoder=dict(
                    type='SimCCLabel',
                    input_size=(256, 256),
                    sigma=(12, 12),
                    simcc_split_ratio=2.0,
                    normalize=False,
                    use_dark=False)),
            dict(type='PackPoseInputs')
        ])
]
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend', _scope_='mmpose')]
visualizer = dict(
    type='PoseLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer',
    _scope_='mmpose')
log_processor = dict(
    type='LogProcessor',
    window_size=50,
    by_epoch=True,
    num_digits=6,
    _scope_='mmpose')
log_level = 'INFO'
load_from = None
resume = False
backend_args = dict(backend='local')
train_cfg = dict(by_epoch=True, max_epochs=300, val_interval=10)
val_cfg = dict()
test_cfg = dict()
dataset_type = 'CocoDataset'
data_mode = 'topdown'
data_root = 'data/Ear210_Keypoint_Dataset_coco/'
dataset_info = dict(
    dataset_name='Ear210_Keypoint_Dataset_coco',
    classes='ear',
    paper_info=dict(
        author='Tongji Zihao',
        title='Triangle Keypoints Detection',
        container='OpenMMLab',
        year='2023',
        homepage='https://space.bilibili.com/1900783'),
    keypoint_info=dict({
        0:
        dict(name='肾上腺', id=0, color=[101, 205, 228], type='', swap=''),
        1:
        dict(name='耳尖', id=1, color=[240, 128, 128], type='', swap=''),
        2:
        dict(name='胃', id=2, color=[154, 205, 50], type='', swap=''),
        3:
        dict(name='眼', id=3, color=[34, 139, 34], type='', swap=''),
        4:
        dict(name='口', id=4, color=[139, 0, 0], type='', swap=''),
        5:
        dict(name='肝', id=5, color=[255, 165, 0], type='', swap=''),
        6:
        dict(name='对屏尖', id=6, color=[255, 0, 255], type='', swap=''),
        7:
        dict(name='心', id=7, color=[255, 255, 0], type='', swap=''),
        8:
        dict(name='肺', id=8, color=[29, 123, 243], type='', swap=''),
        9:
        dict(name='肺2', id=9, color=[0, 255, 255], type='', swap=''),
        10:
        dict(name='膀胱', id=10, color=[128, 0, 128], type='', swap=''),
        11:
        dict(name='脾', id=11, color=[74, 181, 57], type='', swap=''),
        12:
        dict(name='角窝中', id=12, color=[165, 42, 42], type='', swap=''),
        13:
        dict(name='神门', id=13, color=[128, 128, 0], type='', swap=''),
        14:
        dict(name='肾', id=14, color=[255, 0, 0], type='', swap=''),
        15:
        dict(name='耳门', id=15, color=[34, 139, 34], type='', swap=''),
        16:
        dict(name='听宫', id=16, color=[255, 129, 0], type='', swap=''),
        17:
        dict(name='听会', id=17, color=[70, 130, 180], type='', swap=''),
        18:
        dict(name='肩', id=18, color=[63, 103, 165], type='', swap=''),
        19:
        dict(name='扁桃体', id=19, color=[66, 77, 229], type='', swap=''),
        20:
        dict(name='腰骶椎', id=20, color=[255, 105, 180], type='', swap='')
    }),
    skeleton_info=dict({
        0: dict(link=('眼', '扁桃体'), id=0, color=[100, 150, 200]),
        1: dict(link=('耳门', '听宫'), id=1, color=[200, 100, 150]),
        2: dict(link=('听宫', '听会'), id=2, color=[150, 120, 100]),
        3: dict(link=('耳门', '听会'), id=3, color=[66, 77, 229])
    }),
    joint_weights=[
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0
    ],
    sigmas=[
        0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
        0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
        0.025
    ])
NUM_KEYPOINTS = 21
max_epochs = 300
val_interval = 10
train_batch_size = 32
val_batch_size = 8
stage2_num_epochs = 0
base_lr = 0.004
randomness = dict(seed=21)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.004, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
param_scheduler = [
    dict(type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0, end=20),
    dict(
        type='CosineAnnealingLR',
        eta_min=0.0002,
        begin=150,
        end=300,
        T_max=150,
        by_epoch=True,
        convert_to_iter_based=True)
]
auto_scale_lr = dict(base_batch_size=1024)
codec = dict(
    type='SimCCLabel',
    input_size=(256, 256),
    sigma=(12, 12),
    simcc_split_ratio=2.0,
    normalize=False,
    use_dark=False)
model = dict(
    type='TopdownPoseEstimator',
    data_preprocessor=dict(
        type='PoseDataPreprocessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True),
    backbone=dict(
        _scope_='mmdet',
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=0.33,
        widen_factor=0.5,
        out_indices=(4, ),
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU'),
        init_cfg=dict(
            type='Pretrained',
            prefix='backbone.',
            checkpoint=
            'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth'
        )),
    head=dict(
        type='RTMCCHead',
        in_channels=512,
        out_channels=21,
        input_size=(256, 256),
        in_featuremap_size=(8, 8),
        simcc_split_ratio=2.0,
        final_layer_kernel_size=7,
        gau_cfg=dict(
            hidden_dims=256,
            s=128,
            expansion_factor=2,
            dropout_rate=0.0,
            drop_path=0.0,
            act_fn='SiLU',
            use_rel_bias=False,
            pos_enc=False),
        loss=dict(
            type='KLDiscretLoss',
            use_target_weight=True,
            beta=10.0,
            label_softmax=True),
        decoder=dict(
            type='SimCCLabel',
            input_size=(256, 256),
            sigma=(12, 12),
            simcc_split_ratio=2.0,
            normalize=False,
            use_dark=False)),
    test_cfg=dict(flip_test=True))
train_pipeline = [
    dict(type='LoadImage', backend_args=dict(backend='local')),
    dict(type='GetBBoxCenterScale'),
    dict(type='RandomFlip', direction='horizontal'),
    dict(
        type='RandomBBoxTransform', scale_factor=[0.8, 1.2], rotate_factor=30),
    dict(type='TopdownAffine', input_size=(256, 256)),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        type='Albumentation',
        transforms=[
            dict(type='ChannelShuffle', p=0.5),
            dict(type='CLAHE', p=0.5),
            dict(type='ColorJitter', p=0.5),
            dict(
                type='CoarseDropout',
                max_holes=4,
                max_height=0.3,
                max_width=0.3,
                min_holes=1,
                min_height=0.2,
                min_width=0.2,
                p=0.5)
        ]),
    dict(
        type='GenerateTarget',
        encoder=dict(
            type='SimCCLabel',
            input_size=(256, 256),
            sigma=(12, 12),
            simcc_split_ratio=2.0,
            normalize=False,
            use_dark=False)),
    dict(type='PackPoseInputs')
]
val_pipeline = [
    dict(type='LoadImage', backend_args=dict(backend='local')),
    dict(type='GetBBoxCenterScale'),
    dict(type='TopdownAffine', input_size=(256, 256)),
    dict(type='PackPoseInputs')
]
train_pipeline_stage2 = [
    dict(type='LoadImage', backend_args=dict(backend='local')),
    dict(type='GetBBoxCenterScale'),
    dict(type='RandomFlip', direction='horizontal'),
    dict(type='RandomHalfBody'),
    dict(
        type='RandomBBoxTransform',
        shift_factor=0.0,
        scale_factor=[0.75, 1.25],
        rotate_factor=60),
    dict(type='TopdownAffine', input_size=(256, 256)),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        type='Albumentation',
        transforms=[
            dict(type='Blur', p=0.1),
            dict(type='MedianBlur', p=0.1),
            dict(
                type='CoarseDropout',
                max_holes=1,
                max_height=0.4,
                max_width=0.4,
                min_holes=1,
                min_height=0.2,
                min_width=0.2,
                p=0.5)
        ]),
    dict(
        type='GenerateTarget',
        encoder=dict(
            type='SimCCLabel',
            input_size=(256, 256),
            sigma=(12, 12),
            simcc_split_ratio=2.0,
            normalize=False,
            use_dark=False)),
    dict(type='PackPoseInputs')
]
train_dataloader = dict(
    batch_size=32,
    num_workers=1,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    dataset=dict(
        type='CocoDataset',
        data_root='data/Ear210_Keypoint_Dataset_coco/',
        metainfo=dict(
            dataset_name='Ear210_Keypoint_Dataset_coco',
            classes='ear',
            paper_info=dict(
                author='Tongji Zihao',
                title='Triangle Keypoints Detection',
                container='OpenMMLab',
                year='2023',
                homepage='https://space.bilibili.com/1900783'),
            keypoint_info=dict({
                0:
                dict(
                    name='肾上腺', id=0, color=[101, 205, 228], type='', swap=''),
                1:
                dict(name='耳尖', id=1, color=[240, 128, 128], type='', swap=''),
                2:
                dict(name='胃', id=2, color=[154, 205, 50], type='', swap=''),
                3:
                dict(name='眼', id=3, color=[34, 139, 34], type='', swap=''),
                4:
                dict(name='口', id=4, color=[139, 0, 0], type='', swap=''),
                5:
                dict(name='肝', id=5, color=[255, 165, 0], type='', swap=''),
                6:
                dict(name='对屏尖', id=6, color=[255, 0, 255], type='', swap=''),
                7:
                dict(name='心', id=7, color=[255, 255, 0], type='', swap=''),
                8:
                dict(name='肺', id=8, color=[29, 123, 243], type='', swap=''),
                9:
                dict(name='肺2', id=9, color=[0, 255, 255], type='', swap=''),
                10:
                dict(name='膀胱', id=10, color=[128, 0, 128], type='', swap=''),
                11:
                dict(name='脾', id=11, color=[74, 181, 57], type='', swap=''),
                12:
                dict(name='角窝中', id=12, color=[165, 42, 42], type='', swap=''),
                13:
                dict(name='神门', id=13, color=[128, 128, 0], type='', swap=''),
                14:
                dict(name='肾', id=14, color=[255, 0, 0], type='', swap=''),
                15:
                dict(name='耳门', id=15, color=[34, 139, 34], type='', swap=''),
                16:
                dict(name='听宫', id=16, color=[255, 129, 0], type='', swap=''),
                17:
                dict(name='听会', id=17, color=[70, 130, 180], type='', swap=''),
                18:
                dict(name='肩', id=18, color=[63, 103, 165], type='', swap=''),
                19:
                dict(name='扁桃体', id=19, color=[66, 77, 229], type='', swap=''),
                20:
                dict(
                    name='腰骶椎', id=20, color=[255, 105, 180], type='', swap='')
            }),
            skeleton_info=dict({
                0:
                dict(link=('眼', '扁桃体'), id=0, color=[100, 150, 200]),
                1:
                dict(link=('耳门', '听宫'), id=1, color=[200, 100, 150]),
                2:
                dict(link=('听宫', '听会'), id=2, color=[150, 120, 100]),
                3:
                dict(link=('耳门', '听会'), id=3, color=[66, 77, 229])
            }),
            joint_weights=[
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0
            ],
            sigmas=[
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025
            ]),
        data_mode='topdown',
        ann_file='train_coco.json',
        data_prefix=dict(img='images/'),
        pipeline=[
            dict(type='LoadImage', backend_args=dict(backend='local')),
            dict(type='GetBBoxCenterScale'),
            dict(type='RandomFlip', direction='horizontal'),
            dict(
                type='RandomBBoxTransform',
                scale_factor=[0.8, 1.2],
                rotate_factor=30),
            dict(type='TopdownAffine', input_size=(256, 256)),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                type='Albumentation',
                transforms=[
                    dict(type='ChannelShuffle', p=0.5),
                    dict(type='CLAHE', p=0.5),
                    dict(type='ColorJitter', p=0.5),
                    dict(
                        type='CoarseDropout',
                        max_holes=4,
                        max_height=0.3,
                        max_width=0.3,
                        min_holes=1,
                        min_height=0.2,
                        min_width=0.2,
                        p=0.5)
                ]),
            dict(
                type='GenerateTarget',
                encoder=dict(
                    type='SimCCLabel',
                    input_size=(256, 256),
                    sigma=(12, 12),
                    simcc_split_ratio=2.0,
                    normalize=False,
                    use_dark=False)),
            dict(type='PackPoseInputs')
        ]))
val_dataloader = dict(
    batch_size=8,
    num_workers=1,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False, round_up=False),
    dataset=dict(
        type='CocoDataset',
        data_root='data/Ear210_Keypoint_Dataset_coco/',
        metainfo=dict(
            dataset_name='Ear210_Keypoint_Dataset_coco',
            classes='ear',
            paper_info=dict(
                author='Tongji Zihao',
                title='Triangle Keypoints Detection',
                container='OpenMMLab',
                year='2023',
                homepage='https://space.bilibili.com/1900783'),
            keypoint_info=dict({
                0:
                dict(
                    name='肾上腺', id=0, color=[101, 205, 228], type='', swap=''),
                1:
                dict(name='耳尖', id=1, color=[240, 128, 128], type='', swap=''),
                2:
                dict(name='胃', id=2, color=[154, 205, 50], type='', swap=''),
                3:
                dict(name='眼', id=3, color=[34, 139, 34], type='', swap=''),
                4:
                dict(name='口', id=4, color=[139, 0, 0], type='', swap=''),
                5:
                dict(name='肝', id=5, color=[255, 165, 0], type='', swap=''),
                6:
                dict(name='对屏尖', id=6, color=[255, 0, 255], type='', swap=''),
                7:
                dict(name='心', id=7, color=[255, 255, 0], type='', swap=''),
                8:
                dict(name='肺', id=8, color=[29, 123, 243], type='', swap=''),
                9:
                dict(name='肺2', id=9, color=[0, 255, 255], type='', swap=''),
                10:
                dict(name='膀胱', id=10, color=[128, 0, 128], type='', swap=''),
                11:
                dict(name='脾', id=11, color=[74, 181, 57], type='', swap=''),
                12:
                dict(name='角窝中', id=12, color=[165, 42, 42], type='', swap=''),
                13:
                dict(name='神门', id=13, color=[128, 128, 0], type='', swap=''),
                14:
                dict(name='肾', id=14, color=[255, 0, 0], type='', swap=''),
                15:
                dict(name='耳门', id=15, color=[34, 139, 34], type='', swap=''),
                16:
                dict(name='听宫', id=16, color=[255, 129, 0], type='', swap=''),
                17:
                dict(name='听会', id=17, color=[70, 130, 180], type='', swap=''),
                18:
                dict(name='肩', id=18, color=[63, 103, 165], type='', swap=''),
                19:
                dict(name='扁桃体', id=19, color=[66, 77, 229], type='', swap=''),
                20:
                dict(
                    name='腰骶椎', id=20, color=[255, 105, 180], type='', swap='')
            }),
            skeleton_info=dict({
                0:
                dict(link=('眼', '扁桃体'), id=0, color=[100, 150, 200]),
                1:
                dict(link=('耳门', '听宫'), id=1, color=[200, 100, 150]),
                2:
                dict(link=('听宫', '听会'), id=2, color=[150, 120, 100]),
                3:
                dict(link=('耳门', '听会'), id=3, color=[66, 77, 229])
            }),
            joint_weights=[
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0
            ],
            sigmas=[
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025
            ]),
        data_mode='topdown',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        pipeline=[
            dict(type='LoadImage', backend_args=dict(backend='local')),
            dict(type='GetBBoxCenterScale'),
            dict(type='TopdownAffine', input_size=(256, 256)),
            dict(type='PackPoseInputs')
        ]))
test_dataloader = dict(
    batch_size=8,
    num_workers=1,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False, round_up=False),
    dataset=dict(
        type='CocoDataset',
        data_root='data/Ear210_Keypoint_Dataset_coco/',
        metainfo=dict(
            dataset_name='Ear210_Keypoint_Dataset_coco',
            classes='ear',
            paper_info=dict(
                author='Tongji Zihao',
                title='Triangle Keypoints Detection',
                container='OpenMMLab',
                year='2023',
                homepage='https://space.bilibili.com/1900783'),
            keypoint_info=dict({
                0:
                dict(
                    name='肾上腺', id=0, color=[101, 205, 228], type='', swap=''),
                1:
                dict(name='耳尖', id=1, color=[240, 128, 128], type='', swap=''),
                2:
                dict(name='胃', id=2, color=[154, 205, 50], type='', swap=''),
                3:
                dict(name='眼', id=3, color=[34, 139, 34], type='', swap=''),
                4:
                dict(name='口', id=4, color=[139, 0, 0], type='', swap=''),
                5:
                dict(name='肝', id=5, color=[255, 165, 0], type='', swap=''),
                6:
                dict(name='对屏尖', id=6, color=[255, 0, 255], type='', swap=''),
                7:
                dict(name='心', id=7, color=[255, 255, 0], type='', swap=''),
                8:
                dict(name='肺', id=8, color=[29, 123, 243], type='', swap=''),
                9:
                dict(name='肺2', id=9, color=[0, 255, 255], type='', swap=''),
                10:
                dict(name='膀胱', id=10, color=[128, 0, 128], type='', swap=''),
                11:
                dict(name='脾', id=11, color=[74, 181, 57], type='', swap=''),
                12:
                dict(name='角窝中', id=12, color=[165, 42, 42], type='', swap=''),
                13:
                dict(name='神门', id=13, color=[128, 128, 0], type='', swap=''),
                14:
                dict(name='肾', id=14, color=[255, 0, 0], type='', swap=''),
                15:
                dict(name='耳门', id=15, color=[34, 139, 34], type='', swap=''),
                16:
                dict(name='听宫', id=16, color=[255, 129, 0], type='', swap=''),
                17:
                dict(name='听会', id=17, color=[70, 130, 180], type='', swap=''),
                18:
                dict(name='肩', id=18, color=[63, 103, 165], type='', swap=''),
                19:
                dict(name='扁桃体', id=19, color=[66, 77, 229], type='', swap=''),
                20:
                dict(
                    name='腰骶椎', id=20, color=[255, 105, 180], type='', swap='')
            }),
            skeleton_info=dict({
                0:
                dict(link=('眼', '扁桃体'), id=0, color=[100, 150, 200]),
                1:
                dict(link=('耳门', '听宫'), id=1, color=[200, 100, 150]),
                2:
                dict(link=('听宫', '听会'), id=2, color=[150, 120, 100]),
                3:
                dict(link=('耳门', '听会'), id=3, color=[66, 77, 229])
            }),
            joint_weights=[
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0
            ],
            sigmas=[
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025
            ]),
        data_mode='topdown',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        pipeline=[
            dict(type='LoadImage', backend_args=dict(backend='local')),
            dict(type='GetBBoxCenterScale'),
            dict(type='TopdownAffine', input_size=(256, 256)),
            dict(type='PackPoseInputs')
        ]))
val_evaluator = [
    dict(
        type='CocoMetric',
        ann_file='data/Ear210_Keypoint_Dataset_coco/val_coco.json'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(type='NME', norm_mode='keypoint_distance', keypoint_indices=[1, 2])
]
test_evaluator = [
    dict(
        type='CocoMetric',
        ann_file='data/Ear210_Keypoint_Dataset_coco/val_coco.json'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(type='NME', norm_mode='keypoint_distance', keypoint_indices=[1, 2])
]
launcher = 'none'
work_dir = './work_dirs/rtmpose-s-ear'

2023/06/05 19:12:04 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/05 19:12:04 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
2023/06/05 19:12:10 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
2023/06/05 19:12:10 - mmengine - WARNING - The prefix is not set in metric class AUC.
2023/06/05 19:12:10 - mmengine - WARNING - The prefix is not set in metric class NME.
2023/06/05 19:12:15 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([16, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.0.bn.weight - torch.Size([16]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.0.bn.bias - torch.Size([16]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.1.conv.weight - torch.Size([16, 16, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.1.bn.weight - torch.Size([16]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.1.bn.bias - torch.Size([16]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.2.conv.weight - torch.Size([32, 16, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.0.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.0.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.0.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.main_conv.conv.weight - torch.Size([32, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.main_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.main_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.short_conv.conv.weight - torch.Size([32, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.short_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.short_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.final_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.final_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.final_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([32, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([32, 32, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.attention.fc.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.attention.fc.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.0.conv.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.main_conv.conv.weight - torch.Size([64, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.main_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.main_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.short_conv.conv.weight - torch.Size([64, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.short_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.short_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.final_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.final_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.final_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([64, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv1.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([64, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.attention.fc.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.attention.fc.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.0.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.main_conv.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.main_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.main_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.short_conv.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.short_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.short_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.final_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.final_conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.final_conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.attention.fc.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.attention.fc.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.0.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv2.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.main_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.main_conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.main_conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.short_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.short_conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.short_conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.final_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.final_conv.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.final_conv.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.attention.fc.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.attention.fc.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

head.final_layer.weight - torch.Size([21, 512, 7, 7]): 
NormalInit: mean=0, std=0.001, bias=0 

head.final_layer.bias - torch.Size([21]): 
NormalInit: mean=0, std=0.001, bias=0 

head.mlp.0.g - torch.Size([1]): 
The value is the same before and after calling `init_weights` of TopdownPoseEstimator  

head.mlp.1.weight - torch.Size([256, 64]): 
NormalInit: mean=0, std=0.01, bias=0 

head.gau.gamma - torch.Size([2, 128]): 
The value is the same before and after calling `init_weights` of TopdownPoseEstimator  

head.gau.beta - torch.Size([2, 128]): 
The value is the same before and after calling `init_weights` of TopdownPoseEstimator  

head.gau.o.weight - torch.Size([256, 512]): 
NormalInit: mean=0, std=0.01, bias=0 

head.gau.uv.weight - torch.Size([1152, 256]): 
NormalInit: mean=0, std=0.01, bias=0 

head.gau.ln.g - torch.Size([1]): 
The value is the same before and after calling `init_weights` of TopdownPoseEstimator  

head.gau.res_scale.scale - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TopdownPoseEstimator  

head.cls_x.weight - torch.Size([512, 256]): 
NormalInit: mean=0, std=0.01, bias=0 

head.cls_y.weight - torch.Size([512, 256]): 
NormalInit: mean=0, std=0.01, bias=0 
2023/06/05 19:12:15 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/05 19:12:15 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/05 19:12:15 - mmengine - INFO - Checkpoints will be saved to /home/bailab/software/wangshh/MMPose_Tutorials/MMPose_Tutorials-main/2023/0524/mmpose/work_dirs/rtmpose-s-ear.
2023/06/05 19:12:25 - mmengine - INFO - Epoch(train)   [1][1/6]  lr: 4.000000e-08  eta: 5:04:44  time: 10.163662  data_time: 9.871850  memory: 1532  loss: 0.421728  loss_kpt: 0.421728  acc_pose: 0.004464
2023/06/05 19:12:34 - mmengine - INFO - Epoch(train)   [1][2/6]  lr: 2.105642e-04  eta: 4:48:27  time: 9.625960  data_time: 9.374483  memory: 1599  loss: 0.422166  loss_kpt: 0.422166  acc_pose: 0.008929
2023/06/05 19:12:44 - mmengine - INFO - Epoch(train)   [1][3/6]  lr: 4.210884e-04  eta: 4:47:27  time: 9.598084  data_time: 9.354445  memory: 1599  loss: 0.422073  loss_kpt: 0.422073  acc_pose: 0.010417
2023/06/05 19:12:53 - mmengine - INFO - Epoch(train)   [1][4/6]  lr: 6.316126e-04  eta: 4:45:52  time: 9.550132  data_time: 9.316718  memory: 1599  loss: 0.420471  loss_kpt: 0.420471  acc_pose: 0.037202
2023/06/05 19:13:02 - mmengine - INFO - Epoch(train)   [1][5/6]  lr: 8.421368e-04  eta: 4:43:30  time: 9.476816  data_time: 9.252290  memory: 1599  loss: 0.413216  loss_kpt: 0.413216  acc_pose: 0.086310
2023/06/05 19:13:04 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:13:04 - mmengine - INFO - Epoch(train)   [1][6/6]  lr: 1.052661e-03  eta: 4:06:14  time: 8.235492  data_time: 8.034112  memory: 572  loss: 0.362582  loss_kpt: 0.362582  acc_pose: 0.148810
2023/06/05 19:13:14 - mmengine - INFO - Epoch(train)   [2][1/6]  lr: 1.263185e-03  eta: 4:12:52  time: 8.461998  data_time: 8.263090  memory: 1599  loss: 0.358881  loss_kpt: 0.358881  acc_pose: 0.212798
2023/06/05 19:13:23 - mmengine - INFO - Epoch(train)   [2][2/6]  lr: 1.473709e-03  eta: 4:14:29  time: 8.520771  data_time: 8.321968  memory: 1599  loss: 0.353490  loss_kpt: 0.353490  acc_pose: 0.194940
2023/06/05 19:13:32 - mmengine - INFO - Epoch(train)   [2][3/6]  lr: 1.684234e-03  eta: 4:16:08  time: 8.581172  data_time: 8.379516  memory: 1599  loss: 0.348937  loss_kpt: 0.348937  acc_pose: 0.190668
2023/06/05 19:13:41 - mmengine - INFO - Epoch(train)   [2][4/6]  lr: 1.894758e-03  eta: 4:17:34  time: 8.633894  data_time: 8.433611  memory: 1599  loss: 0.344399  loss_kpt: 0.344399  acc_pose: 0.238095
2023/06/05 19:13:50 - mmengine - INFO - Epoch(train)   [2][5/6]  lr: 2.105282e-03  eta: 4:19:21  time: 8.698430  data_time: 8.499856  memory: 1599  loss: 0.342530  loss_kpt: 0.342530  acc_pose: 0.244672
2023/06/05 19:13:53 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:13:53 - mmengine - INFO - Epoch(train)   [2][6/6]  lr: 2.315806e-03  eta: 4:03:02  time: 8.155555  data_time: 7.967416  memory: 572  loss: 0.320144  loss_kpt: 0.320144  acc_pose: 0.208333
2023/06/05 19:14:02 - mmengine - INFO - Epoch(train)   [3][1/6]  lr: 2.526331e-03  eta: 4:06:32  time: 8.277715  data_time: 8.089942  memory: 1599  loss: 0.321781  loss_kpt: 0.321781  acc_pose: 0.153274
2023/06/05 19:14:12 - mmengine - INFO - Epoch(train)   [3][2/6]  lr: 2.736855e-03  eta: 4:09:05  time: 8.368121  data_time: 8.178662  memory: 1599  loss: 0.322545  loss_kpt: 0.322545  acc_pose: 0.159418
2023/06/05 19:14:21 - mmengine - INFO - Epoch(train)   [3][3/6]  lr: 2.947379e-03  eta: 4:10:20  time: 8.415098  data_time: 8.225296  memory: 1599  loss: 0.322656  loss_kpt: 0.322656  acc_pose: 0.193788
2023/06/05 19:14:30 - mmengine - INFO - Epoch(train)   [3][4/6]  lr: 3.157903e-03  eta: 4:12:05  time: 8.478363  data_time: 8.287917  memory: 1599  loss: 0.344872  loss_kpt: 0.344872  acc_pose: 0.065476
2023/06/05 19:14:40 - mmengine - INFO - Epoch(train)   [3][5/6]  lr: 3.368427e-03  eta: 4:13:24  time: 8.527563  data_time: 8.337580  memory: 1599  loss: 0.347636  loss_kpt: 0.347636  acc_pose: 0.186012
2023/06/05 19:14:42 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:14:42 - mmengine - INFO - Epoch(train)   [3][6/6]  lr: 3.578952e-03  eta: 4:03:01  time: 8.182492  data_time: 7.999004  memory: 572  loss: 0.361350  loss_kpt: 0.361350  acc_pose: 0.023810
2023/06/05 19:14:51 - mmengine - INFO - Epoch(train)   [4][1/6]  lr: 3.789476e-03  eta: 4:04:06  time: 8.223863  data_time: 8.040352  memory: 1599  loss: 0.381241  loss_kpt: 0.381241  acc_pose: 0.095238
2023/06/05 19:15:00 - mmengine - INFO - Epoch(train)   [4][2/6]  lr: 4.000000e-03  eta: 4:05:52  time: 8.288159  data_time: 8.102397  memory: 1599  loss: 0.397506  loss_kpt: 0.397506  acc_pose: 0.081845
2023/06/05 19:15:10 - mmengine - INFO - Epoch(train)   [4][3/6]  lr: 4.000000e-03  eta: 4:06:59  time: 8.330037  data_time: 8.143742  memory: 1599  loss: 0.431130  loss_kpt: 0.431130  acc_pose: 0.102679
2023/06/05 19:15:19 - mmengine - INFO - Epoch(train)   [4][4/6]  lr: 4.000000e-03  eta: 4:08:38  time: 8.390643  data_time: 8.203606  memory: 1599  loss: 0.457825  loss_kpt: 0.457825  acc_pose: 0.010417
2023/06/05 19:15:29 - mmengine - INFO - Epoch(train)   [4][5/6]  lr: 4.000000e-03  eta: 4:10:08  time: 8.445829  data_time: 8.258688  memory: 1599  loss: 0.477413  loss_kpt: 0.477413  acc_pose: 0.153274
2023/06/05 19:15:31 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:15:31 - mmengine - INFO - Epoch(train)   [4][6/6]  lr: 4.000000e-03  eta: 4:02:31  time: 8.193441  data_time: 8.011050  memory: 572  loss: 0.464410  loss_kpt: 0.464410  acc_pose: 0.041667
2023/06/05 19:15:40 - mmengine - INFO - Epoch(train)   [5][1/6]  lr: 4.000000e-03  eta: 4:03:23  time: 8.227101  data_time: 8.044555  memory: 1599  loss: 0.485868  loss_kpt: 0.485868  acc_pose: 0.044643
2023/06/05 19:15:50 - mmengine - INFO - Epoch(train)   [5][2/6]  lr: 4.000000e-03  eta: 4:04:40  time: 8.275513  data_time: 8.091677  memory: 1599  loss: 0.496636  loss_kpt: 0.496636  acc_pose: 0.090774
2023/06/05 19:15:59 - mmengine - INFO - Epoch(train)   [5][3/6]  lr: 4.000000e-03  eta: 4:05:52  time: 8.320408  data_time: 8.135822  memory: 1599  loss: 0.496300  loss_kpt: 0.496300  acc_pose: 0.156538
2023/06/05 19:16:08 - mmengine - INFO - Epoch(train)   [5][4/6]  lr: 4.000000e-03  eta: 4:06:26  time: 8.344384  data_time: 8.158910  memory: 1599  loss: 0.495219  loss_kpt: 0.495219  acc_pose: 0.132440
2023/06/05 19:16:18 - mmengine - INFO - Epoch(train)   [5][5/6]  lr: 4.000000e-03  eta: 4:07:19  time: 8.379314  data_time: 8.193809  memory: 1599  loss: 0.498706  loss_kpt: 0.498706  acc_pose: 0.086310
2023/06/05 19:16:20 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:16:20 - mmengine - INFO - Epoch(train)   [5][6/6]  lr: 4.000000e-03  eta: 4:01:12  time: 8.176587  data_time: 7.994881  memory: 572  loss: 0.486602  loss_kpt: 0.486602  acc_pose: 0.113095
2023/06/05 19:16:30 - mmengine - INFO - Epoch(train)   [6][1/6]  lr: 4.000000e-03  eta: 4:02:29  time: 8.224899  data_time: 8.043086  memory: 1599  loss: 0.487504  loss_kpt: 0.487504  acc_pose: 0.132440
2023/06/05 19:16:39 - mmengine - INFO - Epoch(train)   [6][2/6]  lr: 4.000000e-03  eta: 4:03:21  time: 8.258683  data_time: 8.076042  memory: 1599  loss: 0.484091  loss_kpt: 0.484091  acc_pose: 0.227679
2023/06/05 19:16:49 - mmengine - INFO - Epoch(train)   [6][3/6]  lr: 4.000000e-03  eta: 4:04:26  time: 8.300335  data_time: 8.117556  memory: 1599  loss: 0.479425  loss_kpt: 0.479425  acc_pose: 0.204397
2023/06/05 19:16:58 - mmengine - INFO - Epoch(train)   [6][4/6]  lr: 4.000000e-03  eta: 4:05:22  time: 8.336765  data_time: 8.153892  memory: 1599  loss: 0.475493  loss_kpt: 0.475493  acc_pose: 0.184524
2023/06/05 19:17:08 - mmengine - INFO - Epoch(train)   [6][5/6]  lr: 4.000000e-03  eta: 4:06:04  time: 8.365370  data_time: 8.182405  memory: 1599  loss: 0.471318  loss_kpt: 0.471318  acc_pose: 0.199405
2023/06/05 19:17:10 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:17:10 - mmengine - INFO - Epoch(train)   [6][6/6]  lr: 4.000000e-03  eta: 4:00:50  time: 8.192029  data_time: 8.012109  memory: 572  loss: 0.460694  loss_kpt: 0.460694  acc_pose: 0.119048
2023/06/05 19:17:19 - mmengine - INFO - Epoch(train)   [7][1/6]  lr: 4.000000e-03  eta: 4:01:23  time: 8.215521  data_time: 8.034602  memory: 1599  loss: 0.457421  loss_kpt: 0.457421  acc_pose: 0.196429
2023/06/05 19:17:28 - mmengine - INFO - Epoch(train)   [7][2/6]  lr: 4.000000e-03  eta: 4:02:06  time: 8.244461  data_time: 8.062607  memory: 1599  loss: 0.453642  loss_kpt: 0.453642  acc_pose: 0.212798
2023/06/05 19:17:37 - mmengine - INFO - Epoch(train)   [7][3/6]  lr: 4.000000e-03  eta: 4:02:47  time: 8.272293  data_time: 8.090169  memory: 1599  loss: 0.450199  loss_kpt: 0.450199  acc_pose: 0.209821
2023/06/05 19:17:48 - mmengine - INFO - Epoch(train)   [7][4/6]  lr: 4.000000e-03  eta: 4:04:04  time: 8.320934  data_time: 8.138654  memory: 1599  loss: 0.446213  loss_kpt: 0.446213  acc_pose: 0.245824
2023/06/05 19:17:57 - mmengine - INFO - Epoch(train)   [7][5/6]  lr: 4.000000e-03  eta: 4:04:36  time: 8.343510  data_time: 8.161044  memory: 1599  loss: 0.442857  loss_kpt: 0.442857  acc_pose: 0.162599
2023/06/05 19:17:59 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:17:59 - mmengine - INFO - Epoch(train)   [7][6/6]  lr: 4.000000e-03  eta: 4:00:04  time: 8.193676  data_time: 8.013698  memory: 572  loss: 0.434173  loss_kpt: 0.434173  acc_pose: 0.142857
2023/06/05 19:18:08 - mmengine - INFO - Epoch(train)   [8][1/6]  lr: 4.000000e-03  eta: 4:00:48  time: 8.223218  data_time: 8.042443  memory: 1599  loss: 0.430836  loss_kpt: 0.430836  acc_pose: 0.251872
2023/06/05 19:18:17 - mmengine - INFO - Epoch(train)   [8][2/6]  lr: 4.000000e-03  eta: 4:00:50  time: 8.229443  data_time: 8.048143  memory: 1599  loss: 0.427903  loss_kpt: 0.427903  acc_pose: 0.223214
2023/06/05 19:18:26 - mmengine - INFO - Epoch(train)   [8][3/6]  lr: 4.000000e-03  eta: 4:01:32  time: 8.257956  data_time: 8.076347  memory: 1599  loss: 0.424836  loss_kpt: 0.424836  acc_pose: 0.215774
2023/06/05 19:18:35 - mmengine - INFO - Epoch(train)   [8][4/6]  lr: 4.000000e-03  eta: 4:01:43  time: 8.268722  data_time: 8.087023  memory: 1599  loss: 0.421696  loss_kpt: 0.421696  acc_pose: 0.223214
2023/06/05 19:18:45 - mmengine - INFO - Epoch(train)   [8][5/6]  lr: 4.000000e-03  eta: 4:02:29  time: 8.299844  data_time: 8.118022  memory: 1599  loss: 0.419035  loss_kpt: 0.419035  acc_pose: 0.190476
2023/06/05 19:18:47 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:18:47 - mmengine - INFO - Epoch(train)   [8][6/6]  lr: 4.000000e-03  eta: 3:58:38  time: 8.172395  data_time: 7.992567  memory: 572  loss: 0.411911  loss_kpt: 0.411911  acc_pose: 0.119048
2023/06/05 19:18:57 - mmengine - INFO - Epoch(train)   [9][1/6]  lr: 4.000000e-03  eta: 3:59:28  time: 8.205949  data_time: 8.025328  memory: 1599  loss: 0.409533  loss_kpt: 0.409533  acc_pose: 0.196429
2023/06/05 19:19:06 - mmengine - INFO - Epoch(train)   [9][2/6]  lr: 4.000000e-03  eta: 4:00:06  time: 8.232569  data_time: 8.051428  memory: 1599  loss: 0.407054  loss_kpt: 0.407054  acc_pose: 0.209821
2023/06/05 19:19:16 - mmengine - INFO - Epoch(train)   [9][3/6]  lr: 4.000000e-03  eta: 4:00:31  time: 8.212939  data_time: 8.033680  memory: 1599  loss: 0.404185  loss_kpt: 0.404185  acc_pose: 0.250000
2023/06/05 19:19:25 - mmengine - INFO - Epoch(train)   [9][4/6]  lr: 4.000000e-03  eta: 4:01:13  time: 8.226270  data_time: 8.047512  memory: 1599  loss: 0.401584  loss_kpt: 0.401584  acc_pose: 0.226382
2023/06/05 19:19:34 - mmengine - INFO - Epoch(train)   [9][5/6]  lr: 4.000000e-03  eta: 4:01:20  time: 8.210176  data_time: 8.032239  memory: 1599  loss: 0.398840  loss_kpt: 0.398840  acc_pose: 0.205357
2023/06/05 19:19:37 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:19:37 - mmengine - INFO - Epoch(train)   [9][6/6]  lr: 4.000000e-03  eta: 3:58:06  time: 8.073082  data_time: 7.897765  memory: 572  loss: 0.391763  loss_kpt: 0.391763  acc_pose: 0.327381
2023/06/05 19:19:46 - mmengine - INFO - Epoch(train)  [10][1/6]  lr: 4.000000e-03  eta: 3:58:48  time: 8.084508  data_time: 7.908579  memory: 1599  loss: 0.389845  loss_kpt: 0.389845  acc_pose: 0.230655
2023/06/05 19:19:56 - mmengine - INFO - Epoch(train)  [10][2/6]  lr: 4.000000e-03  eta: 3:59:14  time: 8.230257  data_time: 8.051957  memory: 1599  loss: 0.393226  loss_kpt: 0.393226  acc_pose: 0.220238
2023/06/05 19:20:05 - mmengine - INFO - Epoch(train)  [10][3/6]  lr: 4.000000e-03  eta: 3:59:34  time: 8.217207  data_time: 8.038768  memory: 1599  loss: 0.391941  loss_kpt: 0.391941  acc_pose: 0.279762
2023/06/05 19:20:14 - mmengine - INFO - Epoch(train)  [10][4/6]  lr: 4.000000e-03  eta: 4:00:00  time: 8.225670  data_time: 8.047500  memory: 1599  loss: 0.391218  loss_kpt: 0.391218  acc_pose: 0.239583
2023/06/05 19:20:23 - mmengine - INFO - Epoch(train)  [10][5/6]  lr: 4.000000e-03  eta: 4:00:12  time: 8.223914  data_time: 8.046486  memory: 1599  loss: 0.390445  loss_kpt: 0.390445  acc_pose: 0.245968
2023/06/05 19:20:26 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:20:26 - mmengine - INFO - Epoch(train)  [10][6/6]  lr: 4.000000e-03  eta: 3:57:17  time: 8.091948  data_time: 7.916813  memory: 572  loss: 0.385744  loss_kpt: 0.385744  acc_pose: 0.261905
2023/06/05 19:20:26 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/05 19:20:33 - mmengine - INFO - Epoch(val)  [10][1/6]    eta: 0:00:09  time: 1.992824  data_time: 1.938164  memory: 179  
2023/06/05 19:20:35 - mmengine - INFO - Epoch(val)  [10][2/6]    eta: 0:00:07  time: 1.879894  data_time: 1.833760  memory: 179  
2023/06/05 19:20:36 - mmengine - INFO - Epoch(val)  [10][3/6]    eta: 0:00:05  time: 1.830691  data_time: 1.787543  memory: 179  
2023/06/05 19:20:38 - mmengine - INFO - Epoch(val)  [10][4/6]    eta: 0:00:03  time: 1.825851  data_time: 1.783770  memory: 179  
2023/06/05 19:20:40 - mmengine - INFO - Epoch(val)  [10][5/6]    eta: 0:00:01  time: 1.827325  data_time: 1.785813  memory: 179  
2023/06/05 19:20:40 - mmengine - INFO - Epoch(val)  [10][6/6]    eta: 0:00:00  time: 1.604759  data_time: 1.564504  memory: 140  
2023/06/05 19:20:40 - mmengine - INFO - Evaluating CocoMetric...
2023/06/05 19:20:41 - mmengine - INFO - Evaluating PCKAccuracy (normalized by ``"bbox_size"``)...
2023/06/05 19:20:41 - mmengine - INFO - Evaluating AUC...
2023/06/05 19:20:41 - mmengine - INFO - Evaluating NME...
2023/06/05 19:20:41 - mmengine - INFO - Epoch(val) [10][6/6]    coco/AP: 0.000000  coco/AP .5: 0.000000  coco/AP .75: 0.000000  coco/AP (M): -1.000000  coco/AP (L): 0.000000  coco/AR: 0.000000  coco/AR .5: 0.000000  coco/AR .75: 0.000000  coco/AR (M): -1.000000  coco/AR (L): 0.000000  PCK: 0.263039  AUC: 0.007086  NME: 0.257097  data_time: 1.564504  time: 1.604759
2023/06/05 19:20:46 - mmengine - INFO - The best checkpoint with 0.2630 PCK at 10 epoch is saved to best_PCK_epoch_10.pth.
2023/06/05 19:21:01 - mmengine - INFO - Epoch(train)  [11][1/6]  lr: 4.000000e-03  eta: 3:57:44  time: 8.093600  data_time: 7.917278  memory: 1599  loss: 0.384791  loss_kpt: 0.384791  acc_pose: 0.254464
2023/06/05 19:21:10 - mmengine - INFO - Epoch(train)  [11][2/6]  lr: 4.000000e-03  eta: 3:57:59  time: 8.230831  data_time: 8.051768  memory: 1599  loss: 0.388788  loss_kpt: 0.388788  acc_pose: 0.214622
2023/06/05 19:21:19 - mmengine - INFO - Epoch(train)  [11][3/6]  lr: 4.000000e-03  eta: 3:58:18  time: 8.219790  data_time: 8.040239  memory: 1599  loss: 0.387188  loss_kpt: 0.387188  acc_pose: 0.339286
2023/06/05 19:21:29 - mmengine - INFO - Epoch(train)  [11][4/6]  lr: 4.000000e-03  eta: 3:58:59  time: 8.230031  data_time: 8.050904  memory: 1599  loss: 0.386045  loss_kpt: 0.386045  acc_pose: 0.240015
2023/06/05 19:21:38 - mmengine - INFO - Epoch(train)  [11][5/6]  lr: 4.000000e-03  eta: 3:59:12  time: 8.229156  data_time: 8.050215  memory: 1599  loss: 0.384879  loss_kpt: 0.384879  acc_pose: 0.261905
2023/06/05 19:21:40 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:21:40 - mmengine - INFO - Epoch(train)  [11][6/6]  lr: 4.000000e-03  eta: 3:56:20  time: 8.081652  data_time: 7.905277  memory: 572  loss: 0.372608  loss_kpt: 0.372608  acc_pose: 0.279762
2023/06/05 19:21:49 - mmengine - INFO - Epoch(train)  [12][1/6]  lr: 4.000000e-03  eta: 3:56:43  time: 8.083262  data_time: 7.906823  memory: 1599  loss: 0.370298  loss_kpt: 0.370298  acc_pose: 0.272513
2023/06/05 19:21:59 - mmengine - INFO - Epoch(train)  [12][2/6]  lr: 4.000000e-03  eta: 3:57:05  time: 8.224209  data_time: 8.044922  memory: 1599  loss: 0.363878  loss_kpt: 0.363878  acc_pose: 0.256384
2023/06/05 19:22:08 - mmengine - INFO - Epoch(train)  [12][3/6]  lr: 4.000000e-03  eta: 3:57:30  time: 8.236182  data_time: 8.056518  memory: 1599  loss: 0.354944  loss_kpt: 0.354944  acc_pose: 0.233967
2023/06/05 19:22:18 - mmengine - INFO - Epoch(train)  [12][4/6]  lr: 4.000000e-03  eta: 3:57:53  time: 8.235181  data_time: 8.056001  memory: 1599  loss: 0.346106  loss_kpt: 0.346106  acc_pose: 0.281250
2023/06/05 19:22:27 - mmengine - INFO - Epoch(train)  [12][5/6]  lr: 4.000000e-03  eta: 3:58:10  time: 8.237552  data_time: 8.058452  memory: 1599  loss: 0.329352  loss_kpt: 0.329352  acc_pose: 0.266801
2023/06/05 19:22:29 - mmengine - INFO - Exp name: rtmpose-s-ear_20230605_191149
2023/06/05 19:22:29 - mmengine - INFO - Epoch(train)  [12][6/6]  lr: 4.000000e-03  eta: 3:55:37  time: 8.089659  data_time: 7.913082  memory: 572  loss: 0.310332  loss_kpt: 0.310332  acc_pose: 0.321429
2023/06/05 19:22:39 - mmengine - INFO - Epoch(train)  [13][1/6]  lr: 4.000000e-03  eta: 3:55:54  time: 8.081400  data_time: 7.904791  memory: 1599  loss: 0.297676  loss_kpt: 0.297676  acc_pose: 0.239583
2023/06/05 19:22:48 - mmengine - INFO - Epoch(train)  [13][2/6]  lr: 4.000000e-03  eta: 3:56:19  time: 8.225994  data_time: 8.046584  memory: 1599  loss: 0.299485  loss_kpt: 0.299485  acc_pose: 0.292195
2023/06/05 19:22:58 - mmengine - INFO - Epoch(train)  [13][3/6]  lr: 4.000000e-03  eta: 3:56:52  time: 8.244937  data_time: 8.065496  memory: 1599  loss: 0.284725  loss_kpt: 0.284725  acc_pose: 0.294643
2023/06/05 19:23:08 - mmengine - INFO - Epoch(train)  [13][4/6]  lr: 4.000000e-03  eta: 3:57:16  time: 8.248282  data_time: 8.069428  memory: 1599  loss: 0.274323  loss_kpt: 0.274323  acc_pose: 0.337798
